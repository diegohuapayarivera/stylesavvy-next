/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/NdDr7C5cM40
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Prata } from 'next/font/google'
import { Libre_Baskerville } from 'next/font/google'

prata({
  subsets: ['latin'],
  display: 'swap',
})

libre_baskerville({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";
/* eslint-disable @next/next/no-img-element */

import { useEffect } from "react";
import Link from "next/link";

import {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
} from "@/components/ui/dropdown-menu";

import { Button } from "@/components/ui/button";
import { groupByCodeClothe } from "@/helpers/getProducts";
import AccordionFilter from "./AccordionFilter";
import useProduct from "@/hook/useProduct";

import {
  Drawer,
  DrawerContent,
  DrawerHeader,
  DrawerTitle,
  DrawerTrigger,
} from "@/components/ui/drawer";
import CartItem from "./Cart";
import { Toaster } from "react-hot-toast";
import ProductItem from "./ProductItem";

export function Store() {
  const {
    products,
    setproducts,
    selectedCategory,
    selectedColor,
    selectedSize,
    cart,
    setCart,
    addItem,
    deleteItem,
    getCategoryesUniques,
    handleCategoryesChange,
  } = useProduct();

  const url =
    "https://script.google.com/macros/s/AKfycbwTwzwDRs5BqGVkKoe8UzxZkeftP2Aj5kyS2Ni_yAMmWaLbDkFprUVWrznSUEpB5rj-/exec";

  useEffect(() => {
    async function fetchData() {
      const respuesta = await fetch(url);
      const productos = await respuesta.json();

      const productosDisponibles = productos.filter(
        (producto) => producto.estado === "disponible"
      );
      const agrupados = groupByCodeClothe(productosDisponibles);
      setproducts(agrupados);
    }

    fetchData();
  }, [setproducts]);

  return (
    <div>
      <header className="py-4 bg-primary text-primary-foreground md:py-6 lg:py-8">
        <div className="container flex items-center justify-between px-4 mx-auto md:px-6 max-w-10xl">
          <Link href="#" prefetch={false}>
            <div className="flex items-center gap-2">
              <img src="/icono4.png" alt="icono" className="w-12 h-12" />
              <span className="text-lg font-bold md:text-xl lg:text-3xl">
                StyleSavvy
              </span>
            </div>
          </Link>
          <nav className="items-center hidden gap-4 border-white md:flex lg:gap-6">
            <Drawer>
              <DrawerTrigger asChild>
                <Button className="flex items-center justify-center w-full gap-2 border-2 border-white">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="1em"
                    height="1em"
                    viewBox="0 0 24 24"
                  >
                    <path
                      fill="currentColor"
                      d="M17 18c-1.11 0-2 .89-2 2a2 2 0 0 0 2 2a2 2 0 0 0 2-2a2 2 0 0 0-2-2M1 2v2h2l3.6 7.59l-1.36 2.45c-.15.28-.24.61-.24.96a2 2 0 0 0 2 2h12v-2H7.42a.25.25 0 0 1-.25-.25q0-.075.03-.12L8.1 13h7.45c.75 0 1.41-.42 1.75-1.03l3.58-6.47c.07-.16.12-.33.12-.5a1 1 0 0 0-1-1H5.21l-.94-2M7 18c-1.11 0-2 .89-2 2a2 2 0 0 0 2 2a2 2 0 0 0 2-2a2 2 0 0 0-2-2"
                    />
                  </svg>
                  Carrito
                </Button>
              </DrawerTrigger>
              <DrawerContent className="w-[400px] mx-auto">
                <DrawerHeader>
                  <DrawerTitle>Carrito</DrawerTitle>
                </DrawerHeader>
                <CartItem cart={cart} deleteItem={deleteItem} setCart={setCart} />
              </DrawerContent>
            </Drawer>
          </nav>
        </div>
      </header>
      <div className="container max-w-6xl px-4 py-12 mx-auto md:px-6">
        <div className="grid md:grid-cols-[240px_1fr] gap-8">
          <div>
            <div>
              <div className="hidden gap-6 md:grid">
                <h2 className="mb-4 text-3xl font-bold">Filtros</h2>
                <AccordionFilter
                  title={"Categoria"}
                  categoryes={getCategoryesUniques("Categoria")}
                  handleCategoryChange={handleCategoryesChange}
                  selectedCategory={selectedCategory}
                />

                <AccordionFilter
                  title={"Color"}
                  categoryes={getCategoryesUniques("Color")}
                  handleCategoryChange={handleCategoryesChange}
                  selectedCategory={selectedColor}
                />

                <AccordionFilter
                  title={"Talla"}
                  categoryes={getCategoryesUniques("Talla")}
                  handleCategoryChange={handleCategoryesChange}
                  selectedCategory={selectedSize}
                />
              </div>
            </div>
            <div className="flex items-center justify-between md:hidden">
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button
                    variant="outline"
                    size="sm"
                    className="flex items-center gap-2"
                  >
                    <FilterIcon className="w-4 h-4" />
                    Filtros
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent className="w-[300px]">
                  <div className="grid gap-6 p-4">
                    <AccordionFilter
                      title={"Categoria"}
                      categoryes={getCategoryesUniques("Categoria")}
                      handleCategoryChange={handleCategoryesChange}
                      selectedCategory={selectedCategory}
                    />
                    <AccordionFilter
                      title={"Color"}
                      categoryes={getCategoryesUniques("Color")}
                      handleCategoryChange={handleCategoryesChange}
                      selectedCategory={selectedColor}
                    />

                    <AccordionFilter
                      title={"Talla"}
                      categoryes={getCategoryesUniques("Talla")}
                      handleCategoryChange={handleCategoryesChange}
                      selectedCategory={selectedSize}
                    />
                  </div>
                </DropdownMenuContent>
              </DropdownMenu>
              <Drawer>
                <DrawerTrigger asChild>
                  <Button
                    variant="outline"
                    size="sm"
                    className="flex items-center gap-2"
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="1em"
                      height="1em"
                      viewBox="0 0 24 24"
                    >
                      <path
                        fill="currentColor"
                        d="M17 18c-1.11 0-2 .89-2 2a2 2 0 0 0 2 2a2 2 0 0 0 2-2a2 2 0 0 0-2-2M1 2v2h2l3.6 7.59l-1.36 2.45c-.15.28-.24.61-.24.96a2 2 0 0 0 2 2h12v-2H7.42a.25.25 0 0 1-.25-.25q0-.075.03-.12L8.1 13h7.45c.75 0 1.41-.42 1.75-1.03l3.58-6.47c.07-.16.12-.33.12-.5a1 1 0 0 0-1-1H5.21l-.94-2M7 18c-1.11 0-2 .89-2 2a2 2 0 0 0 2 2a2 2 0 0 0 2-2a2 2 0 0 0-2-2"
                      />
                    </svg>
                    Carrito
                  </Button>
                </DrawerTrigger>
                <DrawerContent className="w-[400px] mx-auto">
                  <DrawerHeader>
                    <DrawerTitle>Carrito</DrawerTitle>
                  </DrawerHeader>
                  <CartItem cart={cart} deleteItem={deleteItem} />
                </DrawerContent>
              </Drawer>
            </div>
          </div>
          <div className="grid gap-8">
            <div className="grid gap-6 sm:grid-cols-2 md:grid-cols-3">
              <ProductItem
                products={products}
                selectedCategory={selectedCategory}
                selectedColor={selectedColor}
                selectedSize={selectedSize}
                addItem={addItem}
              />
            </div>
          </div>
        </div>
      </div>
      <Toaster />
    </div>
  );
}

function FilterIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3" />
    </svg>
  );
}
